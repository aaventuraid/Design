# Docker Compose optimized for Coolify v4 deployment
# This configuration works with Coolify's service orchestration

services:
  # Main Application - Optimized for Coolify v4
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      # Database connection
      - DATABASE_URL=${DATABASE_URL}

      # Authentication & Security
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${COOLIFY_URL:-http://localhost:3000}

      # Application Settings
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
      - HOSTNAME=0.0.0.0

      # Coolify specific
      - COOLIFY_URL=${COOLIFY_URL}
      - COOLIFY_FQDN=${COOLIFY_FQDN}
      - COOLIFY_BRANCH=${COOLIFY_BRANCH:-main}

      # File storage
      - DATA_DIR=/app/data
      - IMAGE_BG_PROVIDER=${IMAGE_BG_PROVIDER:-internal}

    ports:
      - "3000:3000"

    volumes:
      # Persistent data storage
      - app_data:/app/data

    restart: unless-stopped

    # Health check for Coolify monitoring
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Resource limits (adjust based on your server capacity)
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

volumes:
  app_data:
    driver: local

# Use Coolify's default network
networks:
  default:
    external: true
    name: coolify
