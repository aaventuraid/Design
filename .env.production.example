# Production Environment Variables
# Copy this file to .env.production and fill in your actual values

#############################
# Database Configuration    #
#############################
DATABASE_URL="postgresql://username:password@host:5432/database_name"

# For Docker Compose PostgreSQL
POSTGRES_USER="your_db_user"
POSTGRES_PASSWORD="your_secure_db_password"
POSTGRES_DB="yuki_yaki_production"

#############################
# Security & Authentication #
#############################
# Generate a strong JWT secret (minimum 32 characters)
JWT_SECRET="your-production-jwt-secret-minimum-32-characters"

# ⚠️ MAJOR CHANGE: Database-First Architecture
#############################
# ADMIN & AI - NO ENV NEEDED #
#############################
# Admin: Auto-created during database seeding
#   Email: admin@localhost
#   Password: admin123
#   ⚠️ CHANGE via Admin Panel after first login!
#
# Gemini API: Configure via Admin Panel (stored in database)
#   No environment variable needed
#   Database-first approach for better security
#
# The following variables are DEPRECATED:
# ADMIN_EMAIL="..."    # ❌ Not needed
# ADMIN_PASSWORD="..." # ❌ Not needed  
# GEMINI_API_KEY="..." # ❌ Not needed

#############################
# Application Settings      #
#############################
NODE_ENV="production"
NEXT_TELEMETRY_DISABLED=1
IMAGE_BG_PROVIDER="internal"

# Optional: Create demo user (set to false for production)
CREATE_DEMO_USER="false"

#############################
# Security Notes            #
#############################
# 1. Never commit this file with real values to version control
# 2. Use strong passwords (minimum 12 characters with mixed case, numbers, symbols)
# 3. Rotate secrets regularly
# 4. Use environment-specific secrets in deployment platforms